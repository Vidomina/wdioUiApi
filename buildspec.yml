# Do not change version. This is the version of aws buildspec, not the version of your buldspec file.
version: 0.2

phases:
  install:
    runtime-versions:
      nodejs: 18
    commands:
      # Until Chrome is part of the image: https://github.com/aws/aws-codebuild-docker-images/issues/562
      - echo Installing Chrome
      # https://github.com/aws/aws-codebuild-docker-images/blob/48b53e25cf36dcb1e0b124bc7bebfb342d161b91/ubuntu/standard/5.0/Dockerfile#L74
      - wget -q -O - https://dl.google.com/linux/linux_signing_key.pub | apt-key add -
      - echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" | tee /etc/apt/sources.list.d/google.list
      - apt-get -qq update
      - apt-get -qq install -y google-chrome-stable
      - google-chrome --version
      # https://github.com/aws/aws-codebuild-docker-images/blob/48b53e25cf36dcb1e0b124bc7bebfb342d161b91/ubuntu/standard/5.0/Dockerfile#L82
      - CHROME_VERSION=`google-chrome --version | awk -F '[ .]' '{print $3"."$4"."$5}'`
      - CHROME_DRIVER_VERSION=`wget -qO- chromedriver.storage.googleapis.com/LATEST_RELEASE_$CHROME_VERSION`
      - wget -qO /tmp/chromedriver_linux64.zip https://chromedriver.storage.googleapis.com/$CHROME_DRIVER_VERSION/chromedriver_linux64.zip
      - unzip -q /tmp/chromedriver_linux64.zip -d /opt
      - rm /tmp/chromedriver_linux64.zip
      - mv /opt/chromedriver /opt/chromedriver-$CHROME_DRIVER_VERSION
      - chmod 755 /opt/chromedriver-$CHROME_DRIVER_VERSION
      - ln -s /opt/chromedriver-$CHROME_DRIVER_VERSION /usr/bin/chromedriver
      - chromedriver --version
      # Installing source NPM dependencies
      - echo Installing source NPM dependencies...
      - npm install
  build:
    commands:
      - echo Build started on `date`
      - echo Compiling the Node.js code
      - npm run wdio
  post_build:
    commands:
      - echo Build completed on `date`
# Include only the files required for your application to run.
# Do not use recursively include artifacts from node_modules directory as it will include unnecessary packages 
# used only for building and testing.
# ExpressJS apps will need other artifact directories included (bin/*, public/*, routes/*, views/* etc).
artifacts:
  files:
    - package.json
    - credentials.js
    - node_modules/*
    - wdio.conf.js
    - test/*